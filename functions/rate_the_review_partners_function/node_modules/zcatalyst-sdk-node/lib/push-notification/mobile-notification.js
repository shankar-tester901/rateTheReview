'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var isNonNullObject = require('../utils/validator').isNonNullObject;
var wrapValidatorsWithPromise = require('../utils/validator').wrapValidatorsWithPromise;
var isNonEmptyString = require('../utils/validator').isNonEmptyString;
var validateObject = require('../utils/validator').validateObject;
var CatalystAppInternals = require('../catalyst-app').CatalystAppInternals;
var API_VERSION = require('../utils/constants').API_VERSION;
var PRODUCT_NAME = require('../utils/constants').PRODUCT_NAME;
var CatalystPushNotificationError = require('../utils/error').CatalystPushNotificationError;
var MobileNotification = /** @class */ (function (_super) {
    __extends(MobileNotification, _super);
    function MobileNotification(id, notificationInstance) {
        var _this = _super.call(this, notificationInstance) || this;
        _this._appId = id;
        _this.requester = notificationInstance.requester;
        return _this;
    }
    MobileNotification.prototype.sendNotification = function (notifyObj, recipient) {
        var _this = this;
        return wrapValidatorsWithPromise(function () {
            isNonNullObject(notifyObj, 'notification_object', true);
            isNonEmptyString(recipient, 'recipient', true);
            validateObject(notifyObj, ['message'], true);
        }, CatalystPushNotificationError).then(function () {
            var request = {
                method: 'POST',
                path: "/" + PRODUCT_NAME + "/" + API_VERSION + "/project/" + _this.projectId + "/push-notification/" + _this._appId + "/project-user/notify",
                data: {
                    recipients: recipient,
                    push_details: notifyObj
                },
                type: 'json'
            };
            return _this.requester.send(request).then(function (resp) {
                var json = resp.data;
                return json.data;
            });
        });
    };
    return MobileNotification;
}(CatalystAppInternals));
exports.MobileNotification = MobileNotification;
