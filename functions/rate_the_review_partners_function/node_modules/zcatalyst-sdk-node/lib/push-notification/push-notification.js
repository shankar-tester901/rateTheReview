'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var isValidApp = require('../utils/validator').isValidApp;
var isStringOrNumber = require('../utils/validator').isStringOrNumber;
var CatalystAppInternals = require('../catalyst-app').CatalystAppInternals;
var AuthorizedHttpClient = require('../utils/api-request').AuthorizedHttpClient;
var CatalystUserManagementError = require('../utils/error').CatalystUserManagementError;
var MobileNotification = require('./mobile-notification').MobileNotification;
var WebNotification = require('./web-notification').WebNotification;
var USER = require('../utils/constants').CREDENTIAL_USER;
var PushNotification = /** @class */ (function (_super) {
    __extends(PushNotification, _super);
    function PushNotification(app) {
        var _this = this;
        isValidApp(app, true);
        _this = _super.call(this, app.internal) || this;
        _super.prototype.switchUser.call(_this, USER.admin);
        _this.requester = new AuthorizedHttpClient(_this);
        return _this;
    }
    PushNotification.prototype.mobile = function (id) {
        if (!isStringOrNumber(id)) {
            throw new CatalystUserManagementError('invalid-argument', 'Value provided for app_id must be a non empty String or Number.', id);
        }
        return new MobileNotification(id, this);
    };
    PushNotification.prototype.web = function () {
        return new WebNotification(this);
    };
    return PushNotification;
}(CatalystAppInternals));
exports.PushNotification = PushNotification;
